name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Paso 1: Chequear el código desde el repositorio
    - name: Checkout code
      uses: actions/checkout@v2

    # Paso 2: Configurar Node.js en el entorno de GitHub Actions
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16' # Cambia esto a la versión de Node que usas

    # Paso 3: Instalar dependencias y construir el frontend
    - name: Install and Build Frontend
      working-directory: ./src/frontend
      run: |
        npm install
        npm run build

    # Paso 4: Instalar dependencias del backend
    - name: Install Backend Dependencies
      working-directory: ./src/backend
      run: |
        npm install

    # Paso 5: Crear archivo temporal para la clave PEM de EC2 desde GitHub Secret
    - name: Add EC2 PEM Key
      env:
        EC2_PEM_KEY: ${{ secrets.SMILEYCREATIONS_PEM }} # Asegúrate de definir este secreto en GitHub
      run: |
        echo "$EC2_PEM_KEY" > ec2_key.pem
        chmod 400 ec2_key.pem

    # Paso 6: Copiar el backend y el build del frontend a la instancia EC2
    - name: Deploy Application to EC2
      run: |
        # Enviar el backend
        scp -i ec2_key.pem -o StrictHostKeyChecking=no -r ./src/backend ec2-user@${{ secrets.EC2_HOST }}:/var/www/backend

        # Enviar el frontend (directorio build)
        scp -i ec2_key.pem -o StrictHostKeyChecking=no -r ./src/frontend/build ec2-user@${{ secrets.EC2_HOST }}:/var/www/frontend

    # Paso 7: Conectar a la instancia EC2 y reiniciar el backend
    - name: Restart Backend Service on EC2
      run: |
        ssh -i ec2_key.pem -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_HOST }} << 'EOF'
          # Navegar al backend y reiniciar con PM2
          cd /var/www/backend
          pm2 restart all || pm2 start server.js --name "backend"

          # Asegurarse de que el frontend está accesible si es necesario configurar el servidor web (por ejemplo, Nginx)
          sudo systemctl restart nginx # Quita esto si no estás usando Nginx
        EOF

    # Paso 8: Eliminar el archivo PEM temporal para seguridad
    - name: Clean Up
      run: rm -f ec2_key.pem
